|DE0_NANO
CLOCK_50 => CLOCK_50.IN1
GPIO_0_D[0] << sweetPLL:sweetPLL_inst.c0
GPIO_0_D[1] << flag.DB_MAX_OUTPUT_PORT_TYPE
GPIO_0_D[2] << <GND>
GPIO_0_D[3] << <GND>
GPIO_0_D[4] << <GND>
GPIO_0_D[5] << VGA_VSYNC_NEG.DB_MAX_OUTPUT_PORT_TYPE
GPIO_0_D[6] << <GND>
GPIO_0_D[7] << VGA_DRIVER:driver.H_SYNC_NEG
GPIO_0_D[8] << <GND>
GPIO_0_D[9] << VGA_DRIVER:driver.PIXEL_COLOR_OUT
GPIO_0_D[10] << <GND>
GPIO_0_D[11] << VGA_DRIVER:driver.PIXEL_COLOR_OUT
GPIO_0_D[12] << <GND>
GPIO_0_D[13] << VGA_DRIVER:driver.PIXEL_COLOR_OUT
GPIO_0_D[14] << <GND>
GPIO_0_D[15] << VGA_DRIVER:driver.PIXEL_COLOR_OUT
GPIO_0_D[16] << <GND>
GPIO_0_D[17] << VGA_DRIVER:driver.PIXEL_COLOR_OUT
GPIO_0_D[18] << <GND>
GPIO_0_D[19] << VGA_DRIVER:driver.PIXEL_COLOR_OUT
GPIO_0_D[20] << <GND>
GPIO_0_D[21] << VGA_DRIVER:driver.PIXEL_COLOR_OUT
GPIO_0_D[22] << <GND>
GPIO_0_D[23] << VGA_DRIVER:driver.PIXEL_COLOR_OUT
GPIO_0_D[24] << <GND>
GPIO_0_D[25] << IMAGE_PROCESSOR:proc.RESULT
GPIO_0_D[26] << <GND>
GPIO_0_D[27] << IMAGE_PROCESSOR:proc.RESULT
GPIO_0_D[28] << <GND>
GPIO_0_D[29] << IMAGE_PROCESSOR:proc.RESULT
GPIO_0_D[30] << <GND>
GPIO_0_D[31] << <GND>
GPIO_0_D[32] << <GND>
GPIO_0_D[33] << <GND>
GPIO_1_D[20] => pixel_data_RGB332.DATAA
GPIO_1_D[21] => pixel_data_RGB332.DATAA
GPIO_1_D[22] => pixel_data_RGB332.DATAB
GPIO_1_D[23] => pixel_data_RGB332.DATAB
GPIO_1_D[24] => pixel_data_RGB332.DATAA
GPIO_1_D[24] => pixel_data_RGB332.DATAB
GPIO_1_D[25] => pixel_data_RGB332.DATAA
GPIO_1_D[26] => pixel_data_RGB332.DATAA
GPIO_1_D[27] => ~NO_FANOUT~
GPIO_1_D[28] => prev_vsync.CLK
GPIO_1_D[28] => prev_href.CLK
GPIO_1_D[28] => pixel_data_RGB332[0].CLK
GPIO_1_D[28] => pixel_data_RGB332[1].CLK
GPIO_1_D[28] => pixel_data_RGB332[2].CLK
GPIO_1_D[28] => pixel_data_RGB332[3].CLK
GPIO_1_D[28] => pixel_data_RGB332[4].CLK
GPIO_1_D[28] => pixel_data_RGB332[5].CLK
GPIO_1_D[28] => pixel_data_RGB332[6].CLK
GPIO_1_D[28] => pixel_data_RGB332[7].CLK
GPIO_1_D[28] => W_EN.CLK
GPIO_1_D[28] => flag.CLK
GPIO_1_D[28] => Y_ADDR[0].CLK
GPIO_1_D[28] => Y_ADDR[1].CLK
GPIO_1_D[28] => Y_ADDR[2].CLK
GPIO_1_D[28] => Y_ADDR[3].CLK
GPIO_1_D[28] => Y_ADDR[4].CLK
GPIO_1_D[28] => Y_ADDR[5].CLK
GPIO_1_D[28] => Y_ADDR[6].CLK
GPIO_1_D[28] => Y_ADDR[7].CLK
GPIO_1_D[28] => Y_ADDR[8].CLK
GPIO_1_D[28] => Y_ADDR[9].CLK
GPIO_1_D[28] => Y_ADDR[10].CLK
GPIO_1_D[28] => Y_ADDR[11].CLK
GPIO_1_D[28] => Y_ADDR[12].CLK
GPIO_1_D[28] => Y_ADDR[13].CLK
GPIO_1_D[28] => Y_ADDR[14].CLK
GPIO_1_D[28] => X_ADDR[0].CLK
GPIO_1_D[28] => X_ADDR[1].CLK
GPIO_1_D[28] => X_ADDR[2].CLK
GPIO_1_D[28] => X_ADDR[3].CLK
GPIO_1_D[28] => X_ADDR[4].CLK
GPIO_1_D[28] => X_ADDR[5].CLK
GPIO_1_D[28] => X_ADDR[6].CLK
GPIO_1_D[28] => X_ADDR[7].CLK
GPIO_1_D[28] => X_ADDR[8].CLK
GPIO_1_D[28] => X_ADDR[9].CLK
GPIO_1_D[28] => X_ADDR[10].CLK
GPIO_1_D[28] => X_ADDR[11].CLK
GPIO_1_D[28] => X_ADDR[12].CLK
GPIO_1_D[28] => X_ADDR[13].CLK
GPIO_1_D[28] => X_ADDR[14].CLK
GPIO_1_D[29] => flag.OUTPUTSELECT
GPIO_1_D[29] => X_ADDR.OUTPUTSELECT
GPIO_1_D[29] => X_ADDR.OUTPUTSELECT
GPIO_1_D[29] => X_ADDR.OUTPUTSELECT
GPIO_1_D[29] => X_ADDR.OUTPUTSELECT
GPIO_1_D[29] => X_ADDR.OUTPUTSELECT
GPIO_1_D[29] => X_ADDR.OUTPUTSELECT
GPIO_1_D[29] => X_ADDR.OUTPUTSELECT
GPIO_1_D[29] => X_ADDR.OUTPUTSELECT
GPIO_1_D[29] => X_ADDR.OUTPUTSELECT
GPIO_1_D[29] => X_ADDR.OUTPUTSELECT
GPIO_1_D[29] => X_ADDR.OUTPUTSELECT
GPIO_1_D[29] => X_ADDR.OUTPUTSELECT
GPIO_1_D[29] => X_ADDR.OUTPUTSELECT
GPIO_1_D[29] => X_ADDR.OUTPUTSELECT
GPIO_1_D[29] => X_ADDR.OUTPUTSELECT
GPIO_1_D[29] => pixel_data_RGB332.OUTPUTSELECT
GPIO_1_D[29] => pixel_data_RGB332.OUTPUTSELECT
GPIO_1_D[29] => pixel_data_RGB332.OUTPUTSELECT
GPIO_1_D[29] => pixel_data_RGB332.OUTPUTSELECT
GPIO_1_D[29] => pixel_data_RGB332.OUTPUTSELECT
GPIO_1_D[29] => pixel_data_RGB332.OUTPUTSELECT
GPIO_1_D[29] => pixel_data_RGB332.OUTPUTSELECT
GPIO_1_D[29] => pixel_data_RGB332.OUTPUTSELECT
GPIO_1_D[29] => prev_href.DATAIN
GPIO_1_D[29] => always1.IN1
GPIO_1_D[29] => always1.IN0
GPIO_1_D[30] => always1.IN1
GPIO_1_D[30] => prev_vsync.DATAIN
GPIO_1_D[31] => ~NO_FANOUT~
GPIO_1_D[32] => ~NO_FANOUT~
GPIO_1_D[33] => ~NO_FANOUT~
KEY[0] => VGA_RESET.IN1
KEY[1] => ~NO_FANOUT~


|DE0_NANO|sweetPLL:sweetPLL_inst
inclk0 => sub_wire1[0].IN1
c0 <= altpll:altpll_component.clk
c1 <= altpll:altpll_component.clk
c2 <= altpll:altpll_component.clk


|DE0_NANO|sweetPLL:sweetPLL_inst|altpll:altpll_component
inclk[0] => sweetPLL_altpll:auto_generated.inclk[0]
inclk[1] => sweetPLL_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => ~NO_FANOUT~
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= <GND>
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|DE0_NANO|sweetPLL:sweetPLL_inst|altpll:altpll_component|sweetPLL_altpll:auto_generated
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1


|DE0_NANO|Dual_Port_RAM_M9K:mem
input_data[0] => mem.data_a[0].DATAIN
input_data[0] => mem.DATAIN
input_data[1] => mem.data_a[1].DATAIN
input_data[1] => mem.DATAIN1
input_data[2] => mem.data_a[2].DATAIN
input_data[2] => mem.DATAIN2
input_data[3] => mem.data_a[3].DATAIN
input_data[3] => mem.DATAIN3
input_data[4] => mem.data_a[4].DATAIN
input_data[4] => mem.DATAIN4
input_data[5] => mem.data_a[5].DATAIN
input_data[5] => mem.DATAIN5
input_data[6] => mem.data_a[6].DATAIN
input_data[6] => mem.DATAIN6
input_data[7] => mem.data_a[7].DATAIN
input_data[7] => mem.DATAIN7
w_addr[0] => mem.waddr_a[0].DATAIN
w_addr[0] => mem.WADDR
w_addr[1] => mem.waddr_a[1].DATAIN
w_addr[1] => mem.WADDR1
w_addr[2] => mem.waddr_a[2].DATAIN
w_addr[2] => mem.WADDR2
w_addr[3] => mem.waddr_a[3].DATAIN
w_addr[3] => mem.WADDR3
w_addr[4] => mem.waddr_a[4].DATAIN
w_addr[4] => mem.WADDR4
w_addr[5] => mem.waddr_a[5].DATAIN
w_addr[5] => mem.WADDR5
w_addr[6] => mem.waddr_a[6].DATAIN
w_addr[6] => mem.WADDR6
w_addr[7] => mem.waddr_a[7].DATAIN
w_addr[7] => mem.WADDR7
w_addr[8] => mem.waddr_a[8].DATAIN
w_addr[8] => mem.WADDR8
w_addr[9] => mem.waddr_a[9].DATAIN
w_addr[9] => mem.WADDR9
w_addr[10] => mem.waddr_a[10].DATAIN
w_addr[10] => mem.WADDR10
w_addr[11] => mem.waddr_a[11].DATAIN
w_addr[11] => mem.WADDR11
w_addr[12] => mem.waddr_a[12].DATAIN
w_addr[12] => mem.WADDR12
w_addr[13] => mem.waddr_a[13].DATAIN
w_addr[13] => mem.WADDR13
w_addr[14] => mem.waddr_a[14].DATAIN
w_addr[14] => mem.WADDR14
r_addr[0] => mem.RADDR
r_addr[1] => mem.RADDR1
r_addr[2] => mem.RADDR2
r_addr[3] => mem.RADDR3
r_addr[4] => mem.RADDR4
r_addr[5] => mem.RADDR5
r_addr[6] => mem.RADDR6
r_addr[7] => mem.RADDR7
r_addr[8] => mem.RADDR8
r_addr[9] => mem.RADDR9
r_addr[10] => mem.RADDR10
r_addr[11] => mem.RADDR11
r_addr[12] => mem.RADDR12
r_addr[13] => mem.RADDR13
r_addr[14] => mem.RADDR14
w_en => mem.we_a.DATAIN
w_en => mem.WE
clk_W => mem.we_a.CLK
clk_W => mem.waddr_a[14].CLK
clk_W => mem.waddr_a[13].CLK
clk_W => mem.waddr_a[12].CLK
clk_W => mem.waddr_a[11].CLK
clk_W => mem.waddr_a[10].CLK
clk_W => mem.waddr_a[9].CLK
clk_W => mem.waddr_a[8].CLK
clk_W => mem.waddr_a[7].CLK
clk_W => mem.waddr_a[6].CLK
clk_W => mem.waddr_a[5].CLK
clk_W => mem.waddr_a[4].CLK
clk_W => mem.waddr_a[3].CLK
clk_W => mem.waddr_a[2].CLK
clk_W => mem.waddr_a[1].CLK
clk_W => mem.waddr_a[0].CLK
clk_W => mem.data_a[7].CLK
clk_W => mem.data_a[6].CLK
clk_W => mem.data_a[5].CLK
clk_W => mem.data_a[4].CLK
clk_W => mem.data_a[3].CLK
clk_W => mem.data_a[2].CLK
clk_W => mem.data_a[1].CLK
clk_W => mem.data_a[0].CLK
clk_W => mem.CLK0
clk_R => output_data[0]~reg0.CLK
clk_R => output_data[1]~reg0.CLK
clk_R => output_data[2]~reg0.CLK
clk_R => output_data[3]~reg0.CLK
clk_R => output_data[4]~reg0.CLK
clk_R => output_data[5]~reg0.CLK
clk_R => output_data[6]~reg0.CLK
clk_R => output_data[7]~reg0.CLK
output_data[0] <= output_data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output_data[1] <= output_data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output_data[2] <= output_data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output_data[3] <= output_data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output_data[4] <= output_data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output_data[5] <= output_data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output_data[6] <= output_data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output_data[7] <= output_data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|DE0_NANO|VGA_DRIVER:driver
RESET => pixel_count.OUTPUTSELECT
RESET => pixel_count.OUTPUTSELECT
RESET => pixel_count.OUTPUTSELECT
RESET => pixel_count.OUTPUTSELECT
RESET => pixel_count.OUTPUTSELECT
RESET => pixel_count.OUTPUTSELECT
RESET => pixel_count.OUTPUTSELECT
RESET => pixel_count.OUTPUTSELECT
RESET => pixel_count.OUTPUTSELECT
RESET => pixel_count.OUTPUTSELECT
RESET => line_count.OUTPUTSELECT
RESET => line_count.OUTPUTSELECT
RESET => line_count.OUTPUTSELECT
RESET => line_count.OUTPUTSELECT
RESET => line_count.OUTPUTSELECT
RESET => line_count.OUTPUTSELECT
RESET => line_count.OUTPUTSELECT
RESET => line_count.OUTPUTSELECT
RESET => line_count.OUTPUTSELECT
RESET => line_count.OUTPUTSELECT
CLOCK => line_count[0].CLK
CLOCK => line_count[1].CLK
CLOCK => line_count[2].CLK
CLOCK => line_count[3].CLK
CLOCK => line_count[4].CLK
CLOCK => line_count[5].CLK
CLOCK => line_count[6].CLK
CLOCK => line_count[7].CLK
CLOCK => line_count[8].CLK
CLOCK => line_count[9].CLK
CLOCK => pixel_count[0].CLK
CLOCK => pixel_count[1].CLK
CLOCK => pixel_count[2].CLK
CLOCK => pixel_count[3].CLK
CLOCK => pixel_count[4].CLK
CLOCK => pixel_count[5].CLK
CLOCK => pixel_count[6].CLK
CLOCK => pixel_count[7].CLK
CLOCK => pixel_count[8].CLK
CLOCK => pixel_count[9].CLK
PIXEL_COLOR_IN[0] => PIXEL_COLOR_OUT.DATAB
PIXEL_COLOR_IN[1] => PIXEL_COLOR_OUT.DATAB
PIXEL_COLOR_IN[2] => PIXEL_COLOR_OUT.DATAB
PIXEL_COLOR_IN[3] => PIXEL_COLOR_OUT.DATAB
PIXEL_COLOR_IN[4] => PIXEL_COLOR_OUT.DATAB
PIXEL_COLOR_IN[5] => PIXEL_COLOR_OUT.DATAB
PIXEL_COLOR_IN[6] => PIXEL_COLOR_OUT.DATAB
PIXEL_COLOR_IN[7] => PIXEL_COLOR_OUT.DATAB
PIXEL_X[0] <= pixel_count[0].DB_MAX_OUTPUT_PORT_TYPE
PIXEL_X[1] <= pixel_count[1].DB_MAX_OUTPUT_PORT_TYPE
PIXEL_X[2] <= pixel_count[2].DB_MAX_OUTPUT_PORT_TYPE
PIXEL_X[3] <= pixel_count[3].DB_MAX_OUTPUT_PORT_TYPE
PIXEL_X[4] <= pixel_count[4].DB_MAX_OUTPUT_PORT_TYPE
PIXEL_X[5] <= pixel_count[5].DB_MAX_OUTPUT_PORT_TYPE
PIXEL_X[6] <= pixel_count[6].DB_MAX_OUTPUT_PORT_TYPE
PIXEL_X[7] <= pixel_count[7].DB_MAX_OUTPUT_PORT_TYPE
PIXEL_X[8] <= pixel_count[8].DB_MAX_OUTPUT_PORT_TYPE
PIXEL_X[9] <= pixel_count[9].DB_MAX_OUTPUT_PORT_TYPE
PIXEL_Y[0] <= line_count[0].DB_MAX_OUTPUT_PORT_TYPE
PIXEL_Y[1] <= line_count[1].DB_MAX_OUTPUT_PORT_TYPE
PIXEL_Y[2] <= line_count[2].DB_MAX_OUTPUT_PORT_TYPE
PIXEL_Y[3] <= line_count[3].DB_MAX_OUTPUT_PORT_TYPE
PIXEL_Y[4] <= line_count[4].DB_MAX_OUTPUT_PORT_TYPE
PIXEL_Y[5] <= line_count[5].DB_MAX_OUTPUT_PORT_TYPE
PIXEL_Y[6] <= line_count[6].DB_MAX_OUTPUT_PORT_TYPE
PIXEL_Y[7] <= line_count[7].DB_MAX_OUTPUT_PORT_TYPE
PIXEL_Y[8] <= line_count[8].DB_MAX_OUTPUT_PORT_TYPE
PIXEL_Y[9] <= line_count[9].DB_MAX_OUTPUT_PORT_TYPE
PIXEL_COLOR_OUT[0] <= PIXEL_COLOR_OUT.DB_MAX_OUTPUT_PORT_TYPE
PIXEL_COLOR_OUT[1] <= PIXEL_COLOR_OUT.DB_MAX_OUTPUT_PORT_TYPE
PIXEL_COLOR_OUT[2] <= PIXEL_COLOR_OUT.DB_MAX_OUTPUT_PORT_TYPE
PIXEL_COLOR_OUT[3] <= PIXEL_COLOR_OUT.DB_MAX_OUTPUT_PORT_TYPE
PIXEL_COLOR_OUT[4] <= PIXEL_COLOR_OUT.DB_MAX_OUTPUT_PORT_TYPE
PIXEL_COLOR_OUT[5] <= PIXEL_COLOR_OUT.DB_MAX_OUTPUT_PORT_TYPE
PIXEL_COLOR_OUT[6] <= PIXEL_COLOR_OUT.DB_MAX_OUTPUT_PORT_TYPE
PIXEL_COLOR_OUT[7] <= PIXEL_COLOR_OUT.DB_MAX_OUTPUT_PORT_TYPE
H_SYNC_NEG <= H_SYNC_NEG.DB_MAX_OUTPUT_PORT_TYPE
V_SYNC_NEG <= V_SYNC_NEG.DB_MAX_OUTPUT_PORT_TYPE


|DE0_NANO|IMAGE_PROCESSOR:proc
PIXEL_IN[0] => LessThan0.IN6
PIXEL_IN[0] => LessThan1.IN6
PIXEL_IN[0] => LessThan2.IN6
PIXEL_IN[1] => LessThan0.IN5
PIXEL_IN[1] => LessThan1.IN5
PIXEL_IN[1] => LessThan2.IN5
PIXEL_IN[2] => LessThan0.IN4
PIXEL_IN[2] => LessThan1.IN4
PIXEL_IN[2] => LessThan2.IN4
PIXEL_IN[3] => ~NO_FANOUT~
PIXEL_IN[4] => ~NO_FANOUT~
PIXEL_IN[5] => LessThan1.IN3
PIXEL_IN[5] => Add1.IN6
PIXEL_IN[6] => Add0.IN4
PIXEL_IN[6] => Add1.IN5
PIXEL_IN[7] => Add0.IN3
PIXEL_IN[7] => Add1.IN4
CLK => lastY[0].CLK
CLK => lastY[1].CLK
CLK => lastY[2].CLK
CLK => lastY[3].CLK
CLK => lastY[4].CLK
CLK => lastY[5].CLK
CLK => lastY[6].CLK
CLK => lastY[7].CLK
CLK => lastsync.CLK
CLK => reg_result[0].CLK
CLK => reg_result[1].CLK
CLK => reg_result[2].CLK
CLK => BLUE_EdgePoint_2[0].CLK
CLK => BLUE_EdgePoint_2[1].CLK
CLK => BLUE_EdgePoint_2[2].CLK
CLK => BLUE_EdgePoint_2[3].CLK
CLK => BLUE_EdgePoint_2[4].CLK
CLK => BLUE_EdgePoint_2[5].CLK
CLK => BLUE_EdgePoint_2[6].CLK
CLK => BLUE_EdgePoint_2[7].CLK
CLK => BLUE_EdgePoint_1[0].CLK
CLK => BLUE_EdgePoint_1[1].CLK
CLK => BLUE_EdgePoint_1[2].CLK
CLK => BLUE_EdgePoint_1[3].CLK
CLK => BLUE_EdgePoint_1[4].CLK
CLK => BLUE_EdgePoint_1[5].CLK
CLK => BLUE_EdgePoint_1[6].CLK
CLK => BLUE_EdgePoint_1[7].CLK
CLK => BLUE_EdgePoint_0[0].CLK
CLK => BLUE_EdgePoint_0[1].CLK
CLK => BLUE_EdgePoint_0[2].CLK
CLK => BLUE_EdgePoint_0[3].CLK
CLK => BLUE_EdgePoint_0[4].CLK
CLK => BLUE_EdgePoint_0[5].CLK
CLK => BLUE_EdgePoint_0[6].CLK
CLK => BLUE_EdgePoint_0[7].CLK
VGA_PIXEL_X[0] => LessThan3.IN12
VGA_PIXEL_X[0] => LessThan4.IN12
VGA_PIXEL_X[0] => BLUE_EdgePoint_2.DATAB
VGA_PIXEL_X[0] => BLUE_EdgePoint_1.DATAB
VGA_PIXEL_X[0] => BLUE_EdgePoint_0.DATAB
VGA_PIXEL_X[1] => LessThan3.IN11
VGA_PIXEL_X[1] => LessThan4.IN11
VGA_PIXEL_X[1] => BLUE_EdgePoint_2.DATAB
VGA_PIXEL_X[1] => BLUE_EdgePoint_1.DATAB
VGA_PIXEL_X[1] => BLUE_EdgePoint_0.DATAB
VGA_PIXEL_X[2] => LessThan3.IN10
VGA_PIXEL_X[2] => LessThan4.IN10
VGA_PIXEL_X[2] => BLUE_EdgePoint_2.DATAB
VGA_PIXEL_X[2] => BLUE_EdgePoint_1.DATAB
VGA_PIXEL_X[2] => BLUE_EdgePoint_0.DATAB
VGA_PIXEL_X[3] => LessThan3.IN9
VGA_PIXEL_X[3] => LessThan4.IN9
VGA_PIXEL_X[3] => BLUE_EdgePoint_2.DATAB
VGA_PIXEL_X[3] => BLUE_EdgePoint_1.DATAB
VGA_PIXEL_X[3] => BLUE_EdgePoint_0.DATAB
VGA_PIXEL_X[4] => LessThan3.IN8
VGA_PIXEL_X[4] => LessThan4.IN8
VGA_PIXEL_X[4] => BLUE_EdgePoint_2.DATAB
VGA_PIXEL_X[4] => BLUE_EdgePoint_1.DATAB
VGA_PIXEL_X[4] => BLUE_EdgePoint_0.DATAB
VGA_PIXEL_X[5] => LessThan3.IN7
VGA_PIXEL_X[5] => LessThan4.IN7
VGA_PIXEL_X[5] => BLUE_EdgePoint_2.DATAB
VGA_PIXEL_X[5] => BLUE_EdgePoint_1.DATAB
VGA_PIXEL_X[5] => BLUE_EdgePoint_0.DATAB
VGA_PIXEL_X[6] => LessThan3.IN6
VGA_PIXEL_X[6] => LessThan4.IN6
VGA_PIXEL_X[6] => BLUE_EdgePoint_2.DATAB
VGA_PIXEL_X[6] => BLUE_EdgePoint_1.DATAB
VGA_PIXEL_X[6] => BLUE_EdgePoint_0.DATAB
VGA_PIXEL_X[7] => LessThan3.IN5
VGA_PIXEL_X[7] => LessThan4.IN5
VGA_PIXEL_X[7] => BLUE_EdgePoint_2.DATAB
VGA_PIXEL_X[7] => BLUE_EdgePoint_1.DATAB
VGA_PIXEL_X[7] => BLUE_EdgePoint_0.DATAB
VGA_PIXEL_X[8] => LessThan3.IN4
VGA_PIXEL_X[8] => LessThan4.IN4
VGA_PIXEL_X[9] => LessThan3.IN3
VGA_PIXEL_X[9] => LessThan4.IN3
VGA_PIXEL_Y[0] => Equal2.IN11
VGA_PIXEL_Y[0] => lastY[0].DATAIN
VGA_PIXEL_Y[1] => Equal2.IN10
VGA_PIXEL_Y[1] => lastY[1].DATAIN
VGA_PIXEL_Y[2] => Equal2.IN9
VGA_PIXEL_Y[2] => lastY[2].DATAIN
VGA_PIXEL_Y[3] => Equal2.IN8
VGA_PIXEL_Y[3] => lastY[3].DATAIN
VGA_PIXEL_Y[4] => Equal2.IN7
VGA_PIXEL_Y[4] => lastY[4].DATAIN
VGA_PIXEL_Y[5] => Equal2.IN6
VGA_PIXEL_Y[5] => lastY[5].DATAIN
VGA_PIXEL_Y[6] => Equal2.IN5
VGA_PIXEL_Y[6] => lastY[6].DATAIN
VGA_PIXEL_Y[7] => Equal2.IN4
VGA_PIXEL_Y[7] => lastY[7].DATAIN
VGA_PIXEL_Y[8] => Equal2.IN3
VGA_PIXEL_Y[9] => Equal2.IN2
VGA_VSYNC_NEG => reg_result.OUTPUTSELECT
VGA_VSYNC_NEG => reg_result.OUTPUTSELECT
VGA_VSYNC_NEG => reg_result.OUTPUTSELECT
VGA_VSYNC_NEG => lastsync.DATAIN
VGA_VSYNC_NEG => always0.IN1
VGA_VSYNC_NEG => BLUE_EdgePoint_0[7].ENA
VGA_VSYNC_NEG => BLUE_EdgePoint_0[6].ENA
VGA_VSYNC_NEG => BLUE_EdgePoint_0[5].ENA
VGA_VSYNC_NEG => BLUE_EdgePoint_0[4].ENA
VGA_VSYNC_NEG => BLUE_EdgePoint_0[3].ENA
VGA_VSYNC_NEG => BLUE_EdgePoint_0[2].ENA
VGA_VSYNC_NEG => BLUE_EdgePoint_0[1].ENA
VGA_VSYNC_NEG => BLUE_EdgePoint_0[0].ENA
VGA_VSYNC_NEG => BLUE_EdgePoint_1[7].ENA
VGA_VSYNC_NEG => BLUE_EdgePoint_1[6].ENA
VGA_VSYNC_NEG => BLUE_EdgePoint_1[5].ENA
VGA_VSYNC_NEG => BLUE_EdgePoint_1[4].ENA
VGA_VSYNC_NEG => BLUE_EdgePoint_1[3].ENA
VGA_VSYNC_NEG => BLUE_EdgePoint_1[2].ENA
VGA_VSYNC_NEG => BLUE_EdgePoint_1[1].ENA
VGA_VSYNC_NEG => BLUE_EdgePoint_1[0].ENA
VGA_VSYNC_NEG => BLUE_EdgePoint_2[7].ENA
VGA_VSYNC_NEG => BLUE_EdgePoint_2[6].ENA
VGA_VSYNC_NEG => BLUE_EdgePoint_2[5].ENA
VGA_VSYNC_NEG => BLUE_EdgePoint_2[4].ENA
VGA_VSYNC_NEG => BLUE_EdgePoint_2[3].ENA
VGA_VSYNC_NEG => BLUE_EdgePoint_2[2].ENA
VGA_VSYNC_NEG => BLUE_EdgePoint_2[1].ENA
VGA_VSYNC_NEG => BLUE_EdgePoint_2[0].ENA
RESULT[0] <= reg_result[0].DB_MAX_OUTPUT_PORT_TYPE
RESULT[1] <= reg_result[1].DB_MAX_OUTPUT_PORT_TYPE
RESULT[2] <= reg_result[2].DB_MAX_OUTPUT_PORT_TYPE


